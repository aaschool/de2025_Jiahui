const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const bodyParser = require("body-parser");

const app = express();
const PORT = 3000;

app.use(cors());
app.use(bodyParser.json());

// MongoDB Connection
mongoose.connect("mongodb://localhost:27017/seatbooking", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Models
const User = mongoose.model("User", new mongoose.Schema({ email: String, password: String }));
const Seat = mongoose.model("Seat", new mongoose.Schema({ id: Number, available: Boolean }));

// Prepopulate Database (Run once)
async function initializeDatabase() {
  const userCount = await User.countDocuments();
  if (userCount === 0) {
    await User.create({ email: "chole.zhou@aaschool.ac.uk", password: "password123" });
  }
  
  const seatCount = await Seat.countDocuments();
  if (seatCount === 0) {
    for (let i = 1; i <= 20; i++) {
      await Seat.create({ id: i, available: i % 3 !== 0 }); // Every 3rd seat is booked
    }
  }
}
initializeDatabase();

// Routes
app.post("/api/users/login", async (req, res) => {
  const { email, password } = req.body;
  const user = await User.findOne({ email, password });
  res.json(user ? true : false);
});

app.get("/api/seats/available", async (req, res) => {
  const seats = await Seat.find({ available: true });
  res.json(seats);
});

app.post("/api/seats/book/:id", async (req, res) => {
  const seat = await Seat.findOne({ id: req.params.id, available: true });
  if (!seat) {
    return res.status(400).json({ message: "Seat not available" });
  }
  seat.available = false;
  await seat.save();
  res.json({ message: "Seat booked successfully!" });
});

// Start Server
app.listen(PORT, () => console.log(`Server running at http://localhost:${PORT}`));
