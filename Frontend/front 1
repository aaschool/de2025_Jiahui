import React, { useState, useEffect } from "react";
import { View, Text, TextInput, Button, TouchableOpacity, StyleSheet, ScrollView } from "react-native";
import { createStackNavigator } from "@react-navigation/stack";
import { NavigationContainer } from "@react-navigation/native";

const Stack = createStackNavigator();
const API_URL = "http://localhost:8080/api"; // Backend URL

// Login Page
function LoginScreen({ navigation }) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const login = async () => {
    let response = await fetch(`${API_URL}/users/login?email=${email}&password=${password}`, { method: "POST" });
    let success = await response.json();
    if (success) navigation.navigate("Home");
    else alert("Login failed!");
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>AA LIBRARY</Text>
      <TextInput style={styles.input} placeholder="AA Account" value={email} onChangeText={setEmail} />
      <TextInput style={styles.input} placeholder="Password" secureTextEntry value={password} onChangeText={setPassword} />
      <Button title="Login" onPress={login} />
    </View>
  );
}

// Home Page
function HomeScreen({ navigation }) {
  const [seats, setSeats] = useState([]);

  useEffect(() => {
    fetchSeats();
  }, []);

  const fetchSeats = async () => {
    let response = await fetch(`${API_URL}/seats/available`);
    let data = await response.json();
    setSeats(data);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Home</Text>
      <Text style={styles.sectionTitle}>CURRENT BOOKING</Text>
      <Text style={styles.bookingText}>SEAT 3: 29/1/2025 10:00 - 14:00</Text>
      <Button title="Leaving Now" onPress={() => alert("Seat Released!")} />
      
      <Text style={styles.sectionTitle}>YOUR UPCOMING BOOKINGS</Text>
      <ScrollView>
        {seats.map((seat) => (
          <TouchableOpacity key={seat.id} style={seat.available ? styles.availableSeat : styles.bookedSeat}>
            <Text style={styles.bookingText}>Seat {seat.id}: {seat.available ? "Available" : "Booked"}</Text>
          </TouchableOpacity>
        ))}
      </ScrollView>
      <Button title="Choose a Seat" onPress={() => navigation.navigate("SeatSelection")} />
    </View>
  );
}

// Seat Selection Page
function SeatSelectionScreen({ navigation }) {
  const [selectedSeat, setSelectedSeat] = useState(null);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>SELECT A SEAT</Text>
      <View style={styles.seatGrid}>
        {[...Array(20).keys()].map((i) => (
          <TouchableOpacity
            key={i}
            style={[styles.seat, selectedSeat === i ? styles.selectedSeat : styles.availableSeat]}
            onPress={() => setSelectedSeat(i)}
          >
            <Text style={styles.seatText}>{selectedSeat === i ? "âœ”" : i + 1}</Text>
          </TouchableOpacity>
        ))}
      </View>
      <Button title="Next" onPress={() => navigation.navigate("TimeSelection")} />
    </View>
  );
}

// Time Selection Page
function TimeSelectionScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>SELECT TIME</Text>
      <TextInput style={styles.input} placeholder="Start Time" />
      <TextInput style={styles.input} placeholder="End Time" />
      <Button title="Next" onPress={() => navigation.navigate("Confirmation")} />
    </View>
  );
}

// Confirmation Page
function ConfirmationScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>CONFIRM BOOKING</Text>
      <Text style={styles.sectionTitle}>AA LIBRARY</Text>
      <Text style={styles.bookingText}>Please confirm your booking: SEAT 3 | 29/1/2025 | 10:00 - 14:00</Text>
      <Button title="Confirm" onPress={() => alert("Booking Confirmed!")} />
      <Button title="Back" onPress={() => navigation.goBack()} />
    </View>
  );
}

// Navigation
export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="SeatSelection" component={SeatSelectionScreen} />
        <Stack.Screen name="TimeSelection" component={TimeSelectionScreen} />
        <Stack.Screen name="Confirmation" component={ConfirmationScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

// Styles
const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: "center", alignItems: "center", backgroundColor: "#F5E6E0" },
  title: { fontSize: 24, fontWeight: "bold", marginBottom: 20 },
  sectionTitle: { fontSize: 18, fontWeight: "bold", marginTop: 20 },
  input: { width: 250, padding: 10, borderWidth: 1, borderColor: "#ccc", marginBottom: 10, backgroundColor: "#fff" },
  bookingText: { fontSize: 16, marginVertical: 10 },
  seatGrid: { flexDirection: "row", flexWrap: "wrap", justifyContent: "center", marginTop: 20 },
  seat: { width: 50, height: 50, margin: 5, justifyContent: "center", alignItems: "center", borderRadius: 10 },
  availableSeat: { backgroundColor: "green" },
  selectedSeat: { backgroundColor: "blue" },
  bookedSeat: { backgroundColor: "red" },
  seatText: { color: "white", fontWeight: "bold" },
});
