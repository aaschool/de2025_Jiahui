import React, { useState, useEffect } from "react";
import { View, Text, TextInput, Button, TouchableOpacity, StyleSheet, ScrollView } from "react-native";
import { createStackNavigator } from "@react-navigation/stack";
import { NavigationContainer } from "@react-navigation/native";

const Stack = createStackNavigator();
const API_URL = "http://localhost:3000/api"; // Backend URL

// Login Screen
function LoginScreen({ navigation }) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const login = async () => {
    let response = await fetch(`${API_URL}/users/login`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password }),
    });
    let success = await response.json();
    if (success) navigation.navigate("Home");
    else alert("Login failed!");
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>AA LIBRARY</Text>
      <TextInput style={styles.input} placeholder="AA Account" value={email} onChangeText={setEmail} />
      <TextInput style={styles.input} placeholder="Password" secureTextEntry value={password} onChangeText={setPassword} />
      <Button title="Login" onPress={login} />
    </View>
  );
}

// Home Screen
function HomeScreen({ navigation }) {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Home</Text>
      <Text style={styles.sectionTitle}>CURRENT BOOKING</Text>
      <Text style={styles.bookingText}>SEAT 3: 29/1/2025 10:00 - 14:00</Text>
      <Button title="Leaving Now" onPress={() => alert("Seat Released!")} />

      <Text style={styles.sectionTitle}>YOUR UPCOMING BOOKINGS</Text>
      <ScrollView>
        <Text style={styles.bookingText}>SEAT 5: 1/2/2025 10:00 - 12:00</Text>
        <Text style={styles.bookingText}>SEAT 12: 7/2/2025 14:00 - 18:00</Text>
      </ScrollView>

      <Button title="Start Booking" onPress={() => navigation.navigate("TimeSelection")} />
      <Button title="Account" onPress={() => navigation.navigate("Account")} />
    </View>
  );
}

// Time Selection Screen (Now Comes Before Seat Selection)
function TimeSelectionScreen({ navigation }) {
  const [startTime, setStartTime] = useState("");
  const [endTime, setEndTime] = useState("");

  return (
    <View style={styles.container}>
      <Text style={styles.title}>SELECT TIME</Text>
      <TextInput style={styles.input} placeholder="Start Time (e.g., 10:00)" value={startTime} onChangeText={setStartTime} />
      <TextInput style={styles.input} placeholder="End Time (e.g., 14:00)" value={endTime} onChangeText={setEndTime} />
      <Button title="Next" onPress={() => navigation.navigate("SeatSelection", { startTime, endTime })} />
    </View>
  );
}

// Seat Selection Screen
function SeatSelectionScreen({ route, navigation }) {
  const [selectedSeat, setSelectedSeat] = useState(null);
  const [seats, setSeats] = useState([]);
  const { startTime, endTime } = route.params || {}; // Receive selected time

  useEffect(() => {
    fetchSeats();
  }, []);

  const fetchSeats = async () => {
    let response = await fetch(`${API_URL}/seats/available`);
    let data = await response.json();
    setSeats(data);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>SELECT A SEAT</Text>
      <Text style={styles.bookingText}>Time: {startTime} - {endTime}</Text>
      <View style={styles.seatGrid}>
        {seats.map((seat) => (
          <TouchableOpacity
            key={seat.id}
            style={[styles.seat, selectedSeat === seat.id ? styles.selectedSeat : styles.availableSeat]}
            onPress={() => setSelectedSeat(seat.id)}
          >
            <Text style={styles.seatText}>{selectedSeat === seat.id ? "âœ”" : seat.id}</Text>
          </TouchableOpacity>
        ))}
      </View>
      <Button title="Next" onPress={() => navigation.navigate("Confirmation", { startTime, endTime, selectedSeat })} />
    </View>
  );
}

// Confirmation Page
function ConfirmationScreen({ route }) {
  const { startTime, endTime, selectedSeat } = route.params || {}; // Receive previous selections

  const bookSeat = async () => {
    let response = await fetch(`${API_URL}/seats/book/${selectedSeat}`, {
      method: "POST",
    });
    let message = await response.json();
    alert(message.message);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>CONFIRM BOOKING</Text>
      <Text style={styles.sectionTitle}>AA LIBRARY</Text>
      <Text style={styles.bookingText}>Confirm your booking:</Text>
      <Text style={styles.bookingText}>SEAT {selectedSeat} | {startTime} - {endTime}</Text>
      <Button title="Confirm" onPress={bookSeat} />
    </View>
  );
}

// Account Page
function AccountScreen() {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Account</Text>
      <Text style={styles.bookingText}>Chole Zhou</Text>
      <Text style={styles.bookingText}>AA Account: 130212</Text>
      <Button title="Manage Bookings" onPress={() => alert("Bookings Page Coming Soon!")} />
      <Button title="Settings" onPress={() => alert("Settings Page Coming Soon!")} />
      <Button title="Logout" onPress={() => alert("Logged Out!")} />
    </View>
  );
}

// Navigation Setup
export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="TimeSelection" component={TimeSelectionScreen} />
        <Stack.Screen name="SeatSelection" component={SeatSelectionScreen} />
        <Stack.Screen name="Confirmation" component={ConfirmationScreen} />
        <Stack.Screen name="Account" component={AccountScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

// Styles
const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: "center", alignItems: "center", backgroundColor: "#F5E6E0" },
  title: { fontSize: 24, fontWeight: "bold", marginBottom: 20 },
  sectionTitle: { fontSize: 18, fontWeight: "bold", marginTop: 20 },
  input: { width: 250, padding: 10, borderWidth: 1, borderColor: "#ccc", marginBottom: 10, backgroundColor: "#fff" },
  bookingText: { fontSize: 16, marginVertical: 10 },
  seatGrid: { flexDirection: "row", flexWrap: "wrap", justifyContent: "center", marginTop: 20 },
  seat: { width: 50, height: 50, margin: 5, justifyContent: "center", alignItems: "center", borderRadius: 10 },
  availableSeat: { backgroundColor: "green" },
  selectedSeat: { backgroundColor: "blue" },
  seatText: { color: "white", fontWeight: "bold" },
});
